package com.voituri.ridesharing.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ProfileAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProfileAllPropertiesEquals(Profile expected, Profile actual) {
        assertProfileAutoGeneratedPropertiesEquals(expected, actual);
        assertProfileAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProfileAllUpdatablePropertiesEquals(Profile expected, Profile actual) {
        assertProfileUpdatableFieldsEquals(expected, actual);
        assertProfileUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProfileAutoGeneratedPropertiesEquals(Profile expected, Profile actual) {
        assertThat(expected)
            .as("Verify Profile auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProfileUpdatableFieldsEquals(Profile expected, Profile actual) {
        assertThat(expected)
            .as("Verify Profile relevant properties")
            .satisfies(e -> assertThat(e.getFirstName()).as("check firstName").isEqualTo(actual.getFirstName()))
            .satisfies(e -> assertThat(e.getLastName()).as("check lastName").isEqualTo(actual.getLastName()))
            .satisfies(e -> assertThat(e.getPhoto()).as("check photo").isEqualTo(actual.getPhoto()))
            .satisfies(e -> assertThat(e.getContactDetails()).as("check contactDetails").isEqualTo(actual.getContactDetails()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProfileUpdatableRelationshipsEquals(Profile expected, Profile actual) {}
}
